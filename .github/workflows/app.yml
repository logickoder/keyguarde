name: Build and Upload App

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: "Specify the build type (e.g., apk or aab)"
        required: true
        default: "apk"
        type: choice
        options:
          - aab
          - apk

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-upload:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"
          cache: "gradle"

      - name: Set up Keystore
        env:
          KEYSTORE: ${{ secrets.KEYSTORE }}
        run: |
          echo "$KEYSTORE" | base64 -d > app/keystore.jks

      - name: Setup Google Services
        env:
          GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
        run: |
          echo "$GOOGLE_SERVICES" | base64 -d > app/google-services.json

      - uses: burrunan/gradle-cache-action@v3
        name: Build app
        env:
          KEYSTORE_PATH: keystore.jks
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        with:
          arguments: ${{ github.event.inputs.build_type == 'apk' && 'assembleRelease --no-daemon' || 'bundleRelease --no-daemon' }}
          gradle-version: wrapper

      - name: Upload app
        if: ${{ github.event.inputs.build_type == 'apk' }}
        uses: actions/upload-artifact@v4
        with:
          name: app
          path: |
            app/build/outputs/apk/release/app-release.apk
          retention-days: 14

      - name: Deploy app to Play Store
        if: ${{ github.event.inputs.build_type == 'aab' }}
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GCP_CREDENTIAL }}
          packageName: "dev.logickoder.keyguarde"
          releaseFiles: app/build/outputs/bundle/release/app-release.aab
          mappingFile: app/build/outputs/mapping/release/mapping.txt
          debugSymbols: app/build/intermediates/merged_native_libs/release/out/lib
          inAppUpdatePriority: 5
          track: production
          status: completed

      - name: Create release notes
        if: success()
        run: |
          echo "Build completed successfully on $(date)" > release-notes.md
          echo "Commit: ${{ github.sha }}" >> release-notes.md
          echo "Branch: ${{ github.ref_name }}" >> release-notes.md

      - name: Upload release notes
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: release-notes
          path: release-notes.md
